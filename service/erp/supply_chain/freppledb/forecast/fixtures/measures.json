[
{"model":"forecast.measure", "fields": {"name": "forecastbaselinevalue", "label": "forecast baseline value", "type": "computed", "mode_future": "view", "mode_past": "view", "compute_expression": "if(cost == 0, forecastbaselinevalue, forecastbaseline * cost)", "update_expression": "if(cost != 0, forecastbaseline := newvalue /cost, forecastbaselinevalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}},
{"model":"forecast.measure", "fields": {"name": "forecastconsumedvalue", "label": "forecast consumed value", "type": "computed", "mode_future": "view", "mode_past": "view", "compute_expression": "if(cost == 0, forecastconsumedvalue, forecastconsumed * cost)", "update_expression": "if(cost != 0, forecastconsumed := newvalue / cost, forecastconsumedvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}},
{"model":"forecast.measure", "fields": {"name": "forecastnetvalue", "label": "forecast net value", "type": "computed", "mode_future": "view", "mode_past": "view", "compute_expression": "if(cost == 0, forecastnetvalue, forecastnet * cost)", "update_expression": "if(cost != 0, forecastnet := newvalue /cost, forecastnetvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}}, 
{"model":"forecast.measure", "fields": {"name": "forecastoverridevalue", "label": "forecast override value", "type": "computed", "overrides": "forecastbaselinevalue", "mode_future": "edit", "mode_past": "view", "compute_expression": "if(cost == 0, forecastoverridevalue, if(forecastoverride == -1, -1, forecastoverride * cost))", "update_expression": "if(cost != 0, forecastoverride := if(newvalue == -1, -1, newvalue / cost), forecastoverridevalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "-1.0"}}, 
{"model":"forecast.measure", "fields": {"name": "forecastplannedvalue", "label": "planned forecast value", "type": "computed", "mode_future": "view", "mode_past": "hide", "compute_expression": "if(cost == 0, forecastplannedvalue, forecastplanned * cost)", "update_expression": "if(cost != 0, forecastplanned := newvalue /cost, forecastplannedvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}}, 
{"model":"forecast.measure", "fields": {"name": "forecasttotalvalue", "label": "forecast total value", "type": "computed", "mode_future": "view", "mode_past": "view", "compute_expression": "if(cost == 0, forecasttotalvalue, forecasttotal * cost)", "update_expression": "if(cost != 0, forecasttotal:= newvalue /cost, forecasttotalvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}}, 
{"model":"forecast.measure", "fields": {"name": "ordersadjustmentvalue", "label": "orders adjustment value", "type": "computed", "mode_future": "hide", "mode_past": "edit", "compute_expression": "if(cost == 0, ordersadjustmentvalue, ordersadjustment * cost)", "update_expression": "if(cost != 0, ordersadjustment := newvalue /cost, ordersadjustmentvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}}, 
{"model":"forecast.measure", "fields": {"name": "ordersopenvalue", "label": "orders open value", "type": "computed", "mode_future": "view", "mode_past": "view", "compute_expression": "if(cost == 0, ordersopenvalue, ordersopen * cost)", "update_expression": "if(cost != 0, ordersopen := newvalue /cost, ordersopenvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "discrete": false, "defaultvalue": "0"}}, 
{"model":"forecast.measure", "fields": {"name": "ordersplannedvalue", "label": "planned orders value", "type": "computed", "mode_future": "view", "mode_past": "hide", "compute_expression": "if(cost == 0, ordersplannedvalue, ordersplanned * cost)", "update_expression": "if(cost != 0, ordersplanned := newvalue /cost, ordersplannedvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}}, 
{"model":"forecast.measure", "fields": {"name": "orderstotalvalue", "label": "orders total value", "type": "computed", "mode_future": "view", "mode_past": "view", "compute_expression": "if(cost == 0, orderstotalvalue, orderstotal * cost)", "update_expression": "if(cost != 0, orderstotal := newvalue /cost, orderstotalvalue := newvalue)", "initially_hidden": true, "formatter": "currency", "defaultvalue": "0"}},
{"model":"forecast.measure", "fields": {"name": "forecasttotal", "label": "total forecast", "type": "computed", "mode_future": "view", "mode_past": "view", "description": "This row is what we'll plan supply for", "compute_expression": "if(forecastoverride == -1, forecastbaseline, forecastoverride)", "initially_hidden": false, "formatter": "number", "defaultvalue": "0"}},
{"model":"forecast.measure", "fields": {"name": "nodata", "label": "no data", "type": "local", "mode_future": "edit", "mode_past": "edit", "description": "Indicates gaps in the sales history", "initially_hidden": true, "formatter": "number", "defaultvalue": "0"}}
]
