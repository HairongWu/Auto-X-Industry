[
{"pk": "forecast.Croston_initialAlfa", "model": "common.parameter", "fields": {"description": "Initial parameter for the Croston forecast method.", "value": "0.1"}},
{"pk": "forecast.Croston_maxAlfa", "model": "common.parameter", "fields": {"description": "Maximum parameter for the Croston forecast method.", "value": "0.8"}},
{"pk": "forecast.Croston_minAlfa", "model": "common.parameter", "fields": {"description": "Minimum parameter for the Croston forecast method.", "value": "0.03"}},
{"pk": "forecast.Croston_minIntermittence", "model": "common.parameter", "fields": {"description": "Minimum intermittence (defined as the percentage of zero demand buckets) before the Croston method is applied.", "value": "0.33"}},
{"pk": "forecast.DoubleExponential_dampenTrend", "model": "common.parameter", "fields": {"description": "Dampening factor applied to the trend in future periods.", "value": "0.8"}},
{"pk": "forecast.DoubleExponential_initialAlfa", "model": "common.parameter", "fields": {"description": "Initial smoothing constant.", "value": "0.2"}},
{"pk": "forecast.DoubleExponential_initialGamma", "model": "common.parameter", "fields": {"description": "Initial trend smoothing constant.", "value": "0.2"}},
{"pk": "forecast.DoubleExponential_maxAlfa", "model": "common.parameter", "fields": {"description": "Maximum smoothing constant.", "value": "0.6"}},
{"pk": "forecast.DoubleExponential_maxGamma", "model": "common.parameter", "fields": {"description": "Maximum trend smoothing constant.", "value": "0.6"}},
{"pk": "forecast.DoubleExponential_minAlfa", "model": "common.parameter", "fields": {"description": "Minimum smoothing constant.", "value": "0.02"}},
{"pk": "forecast.DoubleExponential_minGamma", "model": "common.parameter", "fields": {"description": "Minimum trend smoothing constant.", "value": "0.05"}},
{"pk": "forecast.DueWithinBucket", "model": "common.parameter", "fields": {"description": "Specifies whether forecasted demand is due at the 'start', 'middle' or 'end' of the bucket.", "value": "middle"}},
{"pk": "forecast.Horizon_future", "model": "common.parameter", "fields": {"description": "Specifies the number of days in the future we generate a forecast for.", "value": "365"}},
{"pk": "forecast.Horizon_history", "model": "common.parameter", "fields": {"description": "Specifies the number of days in the past we use to compute a statistical forecast.", "value": "10000"}},
{"pk": "forecast.Iterations", "model": "common.parameter", "fields": {"description": "Specifies the maximum number of iterations allowed for a forecast method to tune its parameters.", "value": "15"}},
{"pk": "forecast.MovingAverage_order", "model": "common.parameter", "fields": {"description": "This parameter controls the number of buckets to be averaged by the moving average forecast method.", "value": "5"}},
{"pk": "forecast.Net_CustomerThenItemHierarchy", "model": "common.parameter", "fields": {"description": "This flag allows us to control whether we first search the customer hierarchy and then the item hierarchy, or the other way around.", "value": "1"}},
{"pk": "forecast.Net_MatchUsingDeliveryOperation", "model": "common.parameter", "fields": {"description": "Specifies whether or not a demand and a forecast require to have the same delivery operation to be a match.", "value": "1"}},
{"pk": "forecast.Net_NetEarly", "model": "common.parameter", "fields": {"description": "Defines how much time (expressed in days) before the due date of an order we are allowed to search for a forecast bucket to net from.", "value": "0"}},
{"pk": "forecast.Net_NetLate", "model": "common.parameter", "fields": {"description": "Defines how much time (expressed in days) after the due date of an order we are allowed to search for a forecast bucket to net from.", "value": "0"}},
{"pk": "forecast.Net_PastDemand", "model": "common.parameter", "fields": {"description": "When this parameter is false (default) only sales orders in the current and future buckets net from forecast. When set to true also older demands are used for netting forecast.", "value": "false"}},
{"pk": "forecast.Net_IgnoreLocation", "model": "common.parameter", "fields": {"description": "When this parameter is true the forecasting netting doesn't need a match between location of the sales order and the forecast.", "value": "false"}},
{"pk": "forecast.populateForecastTable", "model": "common.parameter", "fields": {"description": "Populates automatically the forecast table based on the item/location combinations found in the demand table using parent customer when available. Default : true", "value": "true"}},
{"pk": "forecast.Seasonal_dampenTrend", "model": "common.parameter", "fields": {"description": "Dampening factor applied to the trend in future periods.", "value": "0.8"}},
{"pk": "forecast.Seasonal_initialAlfa", "model": "common.parameter", "fields": {"description": "Initial value for the constant parameter", "value": "0.2"}},
{"pk": "forecast.Seasonal_initialBeta", "model": "common.parameter", "fields": {"description": "Initial value for the trend parameter", "value": "0.2"}},
{"pk": "forecast.Seasonal_maxAlfa", "model": "common.parameter", "fields": {"description": "Maximum value for the constant parameter", "value": "0.5"}},
{"pk": "forecast.Seasonal_maxBeta", "model": "common.parameter", "fields": {"description": "Maximum value for the trend parameter", "value": "0.5"}},
{"pk": "forecast.Seasonal_maxPeriod", "model": "common.parameter", "fields": {"description": "Maximum seasonal cycle to be checked.", "value": "14"}},
{"pk": "forecast.Seasonal_minAlfa", "model": "common.parameter", "fields": {"description": "Minimum value for the constant parameter", "value": "0.02"}},
{"pk": "forecast.Seasonal_minBeta", "model": "common.parameter", "fields": {"description": "Initial value for the trend parameter", "value": "0.2"}},
{"pk": "forecast.Seasonal_gamma", "model": "common.parameter", "fields": {"description": "Value of the seasonal parameter", "value": "0.05"}},
{"pk": "forecast.Seasonal_minPeriod", "model": "common.parameter", "fields": {"description": "Minimum seasonal cycle to be checked.", "value": "2"}},
{"pk": "forecast.Seasonal_minAutocorrelation", "model": "common.parameter", "fields": {"description": "Minimum autocorrelation below which the seasonal forecast method is never selected.", "value": "0.5"}},
{"pk": "forecast.Seasonal_maxAutocorrelation", "model": "common.parameter", "fields": {"description": "Maximum autocorrelation above which the seasonal forecast method is always selected.", "value": "0.8"}},
{"pk": "forecast.Skip", "model": "common.parameter", "fields": {"description": "Specifies the number of time series values used to initialize the forecasting method. The forecast error in these bucket isn't counted.", "value": "0"}},
{"pk": "forecast.SingleExponential_initialAlfa", "model": "common.parameter", "fields": {"description": "Initial smoothing constant.", "value": "0.2"}},
{"pk": "forecast.SingleExponential_maxAlfa", "model": "common.parameter", "fields": {"description": "Maximum smoothing constant.", "value": "0.6"}},
{"pk": "forecast.SingleExponential_minAlfa", "model": "common.parameter", "fields": {"description": "Minimum smoothing constant.", "value": "0.03"}},
{"pk": "forecast.loglevel", "model": "common.parameter", "fields": {"description": "Verbosity of the forecast solver", "value": "0"}},
{"pk": "forecast.SmapeAlfa", "model": "common.parameter", "fields": {"description": "Specifies how the sMAPE forecast error is weighted for different time buckets.", "value": "0.95"}},
{"pk": "forecast.Outlier_maxDeviation", "model": "common.parameter", "fields": {"description": "Multiple of the standard deviation used to detect outliers", "value": "2"}},
{"pk": "forecast.calendar", "model": "common.parameter", "fields": {"description": "Name of a calendar model to define the granularity of the time buckets for forecasting.", "value": "month"}},
{"pk": "forecast.DeadAfterInactivity", "model": "common.parameter", "fields": {"description": "Number of days of inactivity before a forecast is marked dead and it's baseline forecast will be 0. Default is 365.", "value": "365"}}
]
