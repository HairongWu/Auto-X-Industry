<?xml version="1.0" encoding="UTF-8" ?>
<plan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <current>2019-01-01T00:00:00</current>
  <description>
  Test the logic to handle forecast overrides.
  </description>
  <calendars>
    <calendar name="Months">
      <buckets>
        <bucket start="2019-01-01T00:00:00" end="2019-02-01T00:00:00" value="1"/>
        <bucket start="2019-02-01T00:00:00" end="2019-03-01T00:00:00" value="1"/>
        <bucket start="2019-03-01T00:00:00" end="2019-04-01T00:00:00" value="1"/>
        <bucket start="2019-04-01T00:00:00" end="2019-05-01T00:00:00" value="1"/>
        <bucket start="2019-05-01T00:00:00" end="2019-06-01T00:00:00" value="1"/>
        <bucket start="2019-06-01T00:00:00" end="2019-07-01T00:00:00" value="1"/>
        <bucket start="2019-07-01T00:00:00" end="2019-08-01T00:00:00" value="1"/>
        <bucket start="2019-08-01T00:00:00" end="2019-09-01T00:00:00" value="1"/>
        <bucket start="2019-09-01T00:00:00" end="2019-10-01T00:00:00" value="1"/>
        <bucket start="2019-10-01T00:00:00" end="2019-11-01T00:00:00" value="1"/>
        <bucket start="2019-11-01T00:00:00" end="2019-12-01T00:00:00" value="1"/>
        <bucket start="2019-12-01T00:00:00" end="2020-01-01T00:00:00" value="1"/>
      </buckets>
    </calendar>
  </calendars>

  <customers>
    <customer name="all customers"/>
  </customers>

  <items>
    <item name="item A"/>
  </items>

  <locations>
    <location name="all locations"/>
    <location name="location 1">
      <owner name="all locations" />
    </location>
    <location name="location 2">
      <owner name="all locations" />
    </location>
    <location name="location 3">
      <owner name="all locations" />
    </location>
  </locations>

  <demands>
    <demand name="Forecast A" xsi:type="demand_forecast">
      <item name="item A" />
      <location name="all locations" />
      <customer name="all customers" />
      <calendar name="Months" />
      <planned>true</planned>      
    </demand>  
    <demand name="Forecast A1" xsi:type="demand_forecast">
      <item name="item A" />
      <location name="location 1" />
      <customer name="all customers" />
      <calendar name="Months" />
      <discrete>true</discrete>
      <planned>false</planned>
    </demand>
    <demand name="Forecast A2" xsi:type="demand_forecast">
      <item name="item A" />
      <location name="location 2" />
      <customer name="all customers" />
      <calendar name="Months" />
      <discrete>true</discrete>
      <planned>false</planned>
    </demand>
    <demand name="Forecast A3" xsi:type="demand_forecast">
      <item name="item A" />
      <location name="location 3" />
      <customer name="all customers" />
      <calendar name="Months" />
      <discrete>true</discrete>
      <planned>false</planned>      
    </demand>
  </demands>

<?python
from datetime import date

fcst_a = frepple.demand(name="Forecast A")
fcst_a1 = frepple.demand(name="Forecast A1")
fcst_a2 = frepple.demand(name="Forecast A2")
fcst_a3 = frepple.demand(name="Forecast A3")

print("Update a baseline forecast at child level")
fcst_a1.set(date(2019, 1, 1), date(2020, 1, 1), forecastbaseline=120)
fcst_a2.set(date(2019, 1, 1), date(2020, 1, 1), forecastbaseline=120)
frepple.saveforecast("output.1.xml")

print("Update a baseline forecast at parent level (as done by middle out forecast)")
fcst_a.set(date(2019, 7, 1), date(2020, 1, 1), forecastbaseline=60)
frepple.saveforecast("output.2.xml")

print("Create overrides at the child level")
fcst_a1.set(date(2019, 1, 1), date(2019, 3, 1), forecastoverride=40)
fcst_a1.set(date(2019, 3, 1), date(2019, 5, 1), forecastoverride=0)
fcst_a2.set(date(2019, 1, 1), date(2019, 2, 1), forecastoverride=7)
frepple.saveforecast("output.3.xml")

print("Create overrides at the parent level")
fcst_a.set(date(2019, 5, 1), date(2019, 7, 1), forecastoverride=40)
fcst_a.set(date(2019, 7, 1), date(2019, 9, 1), forecastoverride=0)
frepple.saveforecast("output.4.xml")

print("Remove overrides at the child level")
fcst_a1.set(date(2019, 4, 1), date(2019, 6, 1), forecastoverride=-1)
frepple.saveforecast("output.5.xml")

print("Remove all overrides at the parent level")
fcst_a.set(date(2019, 1, 1), date(2019, 12, 1), forecastoverride=-1)
frepple.saveforecast("output.6.xml")

print("Create 0 overrides at the child level")
fcst_a2.set(date(2019, 1, 1), date(2019, 7, 1), forecastoverride=0)
fcst_a1.set(date(2019, 3, 1), date(2019, 10, 1), forecastoverride=0)
frepple.saveforecast("output.7.xml")

print("Create 0 overrides at the parent level")
fcst_a.set(date(2019, 2, 1), date(2020, 1, 1), forecastoverride=0)
frepple.saveforecast("output.8.xml")

print("Erase overrides at the parent level")
fcst_a.set(date(2019, 1, 1), date(2020, 1, 1), forecastoverride=-1)
frepple.saveforecast("output.9.xml")

# Create 5 zones in the horizon
# - Jan-Mar: overrides at all children
# - Apr-Jun: overrides at 2/3 of children
# - Jul-Sep: overrides at 1/3 child
# - Oct-Nov: No overrides
# - Dec: No overrides and no baseline
print("Setup new starting point")
fcst_a1.set(date(2019, 1, 1), date(2020, 1, 1), forecastbaseline=0)
fcst_a2.set(date(2019, 1, 1), date(2020, 1, 1), forecastbaseline=0)
fcst_a3.set(date(2019, 1, 1), date(2020, 1, 1), forecastbaseline=0)
fcst_a1.set(date(2019, 1, 1), date(2019, 12, 1), forecastbaseline=10 * 11)
fcst_a2.set(date(2019, 1, 1), date(2019, 12, 1), forecastbaseline=7 * 11)
fcst_a3.set(date(2019, 1, 1), date(2019, 12, 1), forecastbaseline=5 * 11)
fcst_a1.set(date(2019, 1, 1), date(2019, 10, 1), forecastoverride=45)
fcst_a2.set(date(2019, 1, 1), date(2019, 7, 1), forecastoverride=30)
fcst_a3.set(date(2019, 1, 1), date(2019, 4, 1), forecastoverride=15)
frepple.saveforecast("output.10.xml")

print("Setting a parent override greater than existing overrides")
fcst_a.set(date(2019, 1, 1), date(2019, 2, 1), forecastoverride=100)
fcst_a.set(date(2019, 4, 1), date(2019, 5, 1), forecastoverride=100)
fcst_a.set(date(2019, 7, 1), date(2019, 8, 1), forecastoverride=100)
fcst_a.set(date(2019, 12, 1), date(2020, 1, 1), forecastoverride=100)
frepple.saveforecast("output.11.xml")

print("Setting a parent override smaller than existing overrides")
fcst_a.set(date(2019, 2, 1), date(2019, 3, 1), forecastoverride=3)
fcst_a.set(date(2019, 5, 1), date(2019, 6, 1), forecastoverride=3)
fcst_a.set(date(2019, 8, 1), date(2019, 9, 1), forecastoverride=3)
frepple.saveforecast("output.12.xml")

?>
</plan>
