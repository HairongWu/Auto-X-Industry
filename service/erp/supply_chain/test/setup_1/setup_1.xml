<?xml version="1.0" encoding="UTF-8" ?>
<plan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <description>
    Verifies the resource setup functionality.
    This model contains a number of painting lines, which take considerable
    time to change between colors.
  </description>
  <current>2009-01-01T00:00:00</current>
  <resources>
    <resource name="Painting line">
      <location name="factory" />
      <maximum>1</maximum>
      <setupmatrix name="Painting line changeover">
        <rules>
          <rule priority="1" fromsetup="green" tosetup=".*" duration="P1D" cost="10" />
          <rule priority="2" fromsetup="red" tosetup=".*" duration="P2D" cost="10" />
          <rule priority="3" fromsetup="white" tosetup=".*" duration="P3D" cost="50"/>
          <rule priority="4" fromsetup="black" tosetup=".*" duration="P4D" cost="50"/>
          <rule priority="5" fromsetup="yellow" duration="P5D" cost="20"/>
          <rule priority="6" tosetup="yellow" duration="P6D" cost="20"/>
          <rule priority="7" duration="P3D" />
        </rules>
      </setupmatrix>
      <setup>green</setup>
    </resource>
  </resources>
  <operations>
    <operation name="make red product" xsi:type="operation_time_per" duration_per="P1D">
      <item name="red product" />
      <location name="factory" />
      <loads>
        <load>
          <resource name="Painting line"/>
          <setup>red</setup>
        </load>
      </loads>
      <flows>
        <flow xsi:type="flow_end">
          <item name="red product" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
    <operation name="make green product" xsi:type="operation_time_per" duration_per="P1D">
      <item name="green product" />
      <location name="factory" />
      <loads>
        <load>
          <resource name="Painting line"/>
          <setup>green</setup>
        </load>
      </loads>
      <flows>
        <flow xsi:type="flow_end">
          <item name="green product" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
    <operation name="make white product" xsi:type="operation_time_per" duration_per="P1D">
      <item name="white product" />
      <location name="factory" />
      <loads>
        <load>
          <resource name="Painting line"/>
          <setup>white</setup>
        </load>
      </loads>
      <flows>
        <flow xsi:type="flow_end">
          <item name="white product" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
    <operation name="make blue product" xsi:type="operation_time_per" duration_per="P1D">
      <item name="blue product" />
      <location name="factory" />
      <loads>
        <load>
          <resource name="Painting line"/>
          <setup>blue</setup>
        </load>
      </loads>
      <flows>
        <flow xsi:type="flow_end">
          <item name="blue product" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
    <operation name="make black product" xsi:type="operation_time_per" duration_per="P1D">
      <item name="black product" />
      <location name="factory" />
      <loads>
        <load>
          <resource name="Painting line"/>
          <setup>black</setup>
        </load>
      </loads>
      <flows>
        <flow xsi:type="flow_end">
          <item name="black product" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
    <operation name="make yellow product" xsi:type="operation_time_per" duration_per="P1D">
      <item name="yellow product" />
      <location name="factory" />
      <loads>
        <load>
          <resource name="Painting line"/>
          <setup>yellow</setup>
        </load>
      </loads>
      <flows>
        <flow xsi:type="flow_end">
          <item name="yellow product" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
    <operation name="make colorless product" xsi:type="operation_time_per" duration_per="P1D">
      <item name="colorless product" />
      <location name="factory" />
      <loads>
        <load>
          <resource name="Painting line"/>
        </load>
      </loads>
      <flows>
        <flow xsi:type="flow_end">
          <item name="colorless product" />
          <quantity>1</quantity>
        </flow>
      </flows>
    </operation>
  </operations>
  <demands>
    <demand name="order 1 red">
      <quantity>3</quantity>
      <minshipment>3</minshipment>
      <due>2009-01-30T00:00:00</due>
      <priority>1</priority>
      <item name="red product" />
      <location name="factory" />
    </demand>
    <demand name="order 2 green">
      <quantity>3</quantity>
      <minshipment>3</minshipment>
      <due>2009-02-10T00:00:00</due>
      <priority>2</priority>
      <item name="green product" />
      <location name="factory" />
    </demand>
    <demand name="order 1 white">
      <quantity>3</quantity>
      <minshipment>3</minshipment>
      <due>2009-02-01T00:00:00</due>
      <priority>3</priority>
      <item name="white product" />
      <location name="factory" />
    </demand>
    <demand name="order 1 black">
      <quantity>7</quantity>
      <minshipment>7</minshipment>
      <due>2009-01-05T00:00:00</due>
      <priority>4</priority>
      <item name="black product" />
      <location name="factory" />
    </demand>
    <demand name="order 1 colorless">
      <quantity>3</quantity>
      <minshipment>3</minshipment>
      <due>2009-01-12T00:00:00</due>
      <priority>5</priority>
      <item name="colorless product" />
      <location name="factory" />
    </demand>
    <demand name="order 2 colorless">
      <quantity>4</quantity>
      <minshipment>4</minshipment>
      <due>2009-02-20T00:00:00</due>
      <priority>6</priority>
      <item name="colorless product" />
      <location name="factory" />
    </demand>    
    <demand name="order 2 red">
      <quantity>3</quantity>
      <minshipment>3</minshipment>
      <due>2009-01-30T00:00:00</due>
      <priority>7</priority>
      <item name="red product" />
      <location name="factory" />
    </demand>
  </demands>

<?python

# Testing the Python API of the setup matrix
print("")
for r in frepple.resources():
  print("Resource '%s' uses matrix '%s' and initially has setup '%s'" % (r, r.setupmatrix, r.setup))
print("")
for m in frepple.setupmatrices():
  print("Matrix '%s' has the following rules:" % m.name)
  for i in m.rules:
    print("   %s: from '%s' to '%s' takes %s days and costs %s" % ( 
      i.priority, i.fromsetup, i.tosetup, i.duration / 86400, i.cost
      ))
print("")

# Create an unconstrained plan
print("CREATING UNCONSTRAINED PLAN")
frepple.solver_mrp(constraints=0, loglevel=0).solve()
frepple.saveplan("output.1.xml")

# Report resource conversions in the unconstrained plan
for i in frepple.resources():
  print("Loading of resource '%s'" % i.name)
  for j in i.loadplans:
    if j.quantity > 0:
      print("  Operation '%s' from %s till %s, quantity: %s, setup :'%s', setup duration: %s, end of setup: %s" % (
        j.operationplan.operation.name, j.startdate, j.enddate,
        j.operationplan.quantity, j.setup,
        j.operationplan.setup, j.operationplan.setupend
        ))
j = None  # Removes the Python reference to the last loadplan

## Create a constrained plan
print("\n\nCREATING CONSTRAINED PLAN")
frepple.solver_mrp(constraints=15, loglevel=0).solve()
frepple.saveplan("output.2.xml")

# Report resource conversions in the constrained plan
for i in frepple.resources():
  print("Loading of resource '%s'" % i.name)
  for j in i.loadplans:
    if j.quantity > 0:
      print("  Operation '%s' from %s till %s, quantity: %s, setup :'%s', setup duration: %s, end of setup: %s" % (
        j.operationplan.operation.name, j.startdate, j.enddate,
        j.operationplan.quantity, j.setup,
        j.operationplan.setup, j.operationplan.setupend
        ))
j = None  # Removes the Python reference to the last loadplan
?>

</plan>
