apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app.kubernetes.io/component: backend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backend
    spec:
      containers:
        - name: backend
          image: backend
          env:
            - name: JAVA_OPTS
              value: "-XX:InitialRAMPercentage=20.0 -XX:MinRAMPercentage=80.0 -XX:MaxRAMPercentage=80.0 -XshowSettings:vm"
          resources:
            requests:
              memory: 400Mi
              cpu: 100m
            limits:
              memory: 4Gi
              cpu: "1"
          ports:
            - name: http
              containerPort: 8080
          # 启动探针，会尝试多次，如果失败将重启服务
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            # 默认 periodSeconds 为 10s，failureThreshold 为 3 次，那么默认的等待时长为 10 * 3 = 30s，
            # 对于启动比较慢的 Java 应用不太够，需要上调 periodSeconds 或 failureThreshold
            failureThreshold: 10
          # 存活探针，会尝试多次，如果失败将重启服务
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
          # 就绪探针，如果失败将拒绝服务
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
          volumeMounts:
            - name: config
              mountPath: /app/config
      volumes:
        - name: config
          configMap:
            name: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app.kubernetes.io/component: backend
spec:
  selector:
    app.kubernetes.io/component: backend
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend
  labels:
    app.kubernetes.io/component: backend
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: backend
                port:
                  number: 80
            path: /api(/|$)(.*)
            pathType: Prefix
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app.kubernetes.io/component: minio
spec:
  selector:
    app.kubernetes.io/component: minio
  type: ExternalName
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio
  labels:
    app.kubernetes.io/component: minio
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 1048576m
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  number: 443
            path: /minio(/|$)(.*)
            pathType: Prefix
