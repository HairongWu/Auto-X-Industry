server {
    listen       80;
    server_name  _;

    # For proxy MinIO requests
    ignore_invalid_headers off;
    client_max_body_size 1048576m;
    proxy_buffering off;

    location / {
        set $no_cache 0;
        if ($uri ~* ^/$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/main/;
    }

    location /tool/image {
        set $no_cache 0;
        if ($uri ~* ^/tool/image[/]?$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/image-tool/;
    }

    location /tool/pc {
        set $no_cache 0;
        if ($uri ~* ^/tool/pc[/]?$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/pc-tool/;
    }

    location /tool/text {
        set $no_cache 0;
        if ($uri ~* ^/tool/text[/]?$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/text-tool/;
    }

    location /api/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        rewrite ^/api/(.*) /$1 break;
        proxy_pass   http://backend:8080;
    }

    location /minio/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        rewrite ^/minio/(.*) /$1 break;
        proxy_pass http://minio:9000;
    }
}
